-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.project_users
(
    created_at timestamp with time zone DEFAULT now(),
    user_id uuid NOT NULL,
    project_id uuid NOT NULL,
    CONSTRAINT project_users_pkey PRIMARY KEY (user_id, project_id),
    CONSTRAINT project_users_project_id_fkey FOREIGN KEY (project_id)
        REFERENCES public.projects (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT project_users_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.project_users
    OWNER to postgres;

GRANT ALL ON TABLE public.project_users TO anon;

GRANT ALL ON TABLE public.project_users TO authenticated;

GRANT ALL ON TABLE public.project_users TO postgres;

GRANT ALL ON TABLE public.project_users TO service_role;

COMMENT ON TABLE public.project_users
    IS 'Users belonging to a project';

CREATE TABLE IF NOT EXISTS public.sources
(
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    type text COLLATE pg_catalog."default" NOT NULL,
    parameters jsonb,
    project_id uuid,
    CONSTRAINT sources_pkey PRIMARY KEY (id),
    CONSTRAINT sources_project_id_fkey FOREIGN KEY (project_id)
        REFERENCES public.projects (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.sources
    OWNER to postgres;

GRANT ALL ON TABLE public.sources TO anon;

GRANT ALL ON TABLE public.sources TO authenticated;

GRANT ALL ON TABLE public.sources TO postgres;

GRANT ALL ON TABLE public.sources TO service_role;

ALTER TABLE IF EXISTS public.feedback
    ADD COLUMN project_id uuid NOT NULL;
ALTER TABLE IF EXISTS public.feedback
    ADD CONSTRAINT feedback_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.projects DROP COLUMN IF EXISTS enabled_integrations;

ALTER TABLE IF EXISTS public.projects DROP COLUMN IF EXISTS team;
