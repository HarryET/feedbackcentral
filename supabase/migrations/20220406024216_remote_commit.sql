-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE OR REPLACE FUNCTION public.regen_integration_keypair(
	integration_id uuid)
    RETURNS regen_keypair
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE
    integration public.integrations;
    keypair     crypto_sign_keypair;
BEGIN
    SELECT * INTO integration FROM public.integrations WHERE id = integration_id;
    IF integration IS NULL THEN
        RETURN (false, 'Invalid integration ID', 'private-key')::public.regen_keypair;
    END IF;
    SELECT * INTO keypair FROM crypto_sign_new_keypair();
    UPDATE public.integrations
    SET public_key           = '0x' + encode(keypair.public, 'hex'),
        keypair_generated_at = now()
    WHERE id = integration_id;
    RETURN (true, '-', '0x' + encode(keypair.secret, 'hex'))::public.regen_keypair;
END
$BODY$;

ALTER FUNCTION public.regen_integration_keypair(uuid)
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.regen_integration_keypair(uuid) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.regen_integration_keypair(uuid) TO anon;

GRANT EXECUTE ON FUNCTION public.regen_integration_keypair(uuid) TO authenticated;

GRANT EXECUTE ON FUNCTION public.regen_integration_keypair(uuid) TO postgres;

GRANT EXECUTE ON FUNCTION public.regen_integration_keypair(uuid) TO service_role;

REVOKE ALL ON TABLE public.project_users FROM authenticated;
REVOKE ALL ON TABLE public.project_users FROM postgres;
REVOKE ALL ON TABLE public.project_users FROM service_role;
GRANT ALL ON TABLE public.project_users TO authenticated;

GRANT ALL ON TABLE public.project_users TO service_role;

GRANT ALL ON TABLE public.project_users TO postgres;

REVOKE ALL ON TABLE public.projects FROM authenticated;
REVOKE ALL ON TABLE public.projects FROM postgres;
REVOKE ALL ON TABLE public.projects FROM service_role;
GRANT ALL ON TABLE public.projects TO authenticated;

GRANT ALL ON TABLE public.projects TO postgres;

GRANT ALL ON TABLE public.projects TO service_role;

REVOKE ALL ON TABLE public.sources FROM authenticated;
REVOKE ALL ON TABLE public.sources FROM postgres;
REVOKE ALL ON TABLE public.sources FROM service_role;
GRANT ALL ON TABLE public.sources TO authenticated;

GRANT ALL ON TABLE public.sources TO postgres;

GRANT ALL ON TABLE public.sources TO service_role;

REVOKE ALL ON TABLE public.integrations FROM authenticated;
REVOKE ALL ON TABLE public.integrations FROM postgres;
REVOKE ALL ON TABLE public.integrations FROM service_role;
GRANT ALL ON TABLE public.integrations TO authenticated;

GRANT ALL ON TABLE public.integrations TO postgres;

GRANT ALL ON TABLE public.integrations TO service_role;

REVOKE ALL ON TABLE public.feedback FROM authenticated;
REVOKE ALL ON TABLE public.feedback FROM postgres;
REVOKE ALL ON TABLE public.feedback FROM service_role;
GRANT ALL ON TABLE public.feedback TO authenticated;

GRANT ALL ON TABLE public.feedback TO postgres;

GRANT ALL ON TABLE public.feedback TO service_role;

REVOKE ALL ON TABLE public.users FROM authenticated;
REVOKE ALL ON TABLE public.users FROM postgres;
REVOKE ALL ON TABLE public.users FROM service_role;
GRANT ALL ON TABLE public.users TO authenticated;

GRANT ALL ON TABLE public.users TO postgres;

GRANT ALL ON TABLE public.users TO service_role;

ALTER TABLE IF EXISTS public.users
    ALTER COLUMN id DROP DEFAULT;
ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_id_fkey FOREIGN KEY (id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

-- Type: regen_keypair

-- DROP TYPE IF EXISTS public.regen_keypair;

CREATE TYPE public.regen_keypair AS
(
	success boolean,
	error_message text,
	private_key bytea
);

ALTER TYPE public.regen_keypair
    OWNER TO postgres;

-- Type: stripe_status

-- DROP TYPE IF EXISTS public.stripe_status;

CREATE TYPE public.stripe_status AS ENUM
    ('active', 'canceled', 'unpaid', 'past_due', 'trialing', 'incomplete', 'incomplete_expired');

ALTER TYPE public.stripe_status
    OWNER TO postgres;
